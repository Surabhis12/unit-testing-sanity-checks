name: Sanity Check Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  sanity-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          files: |
            **/*.c
            **/*.cpp
            **/*.h
            **/*.hpp
            **/*.js
            **/*.jsx
            **/*.ts
            **/*.tsx
            **/*.rs
            **/*.kt
            **/*.swift
            **/*.java
            **/*.dart
      
      - name: Set up Node.js
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Set up Rust
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      
      - name: Set up Java
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Install linting tools
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y cppcheck
          
          npm install -g eslint
          
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.50.0/ktlint
          chmod a+x ktlint
          sudo mv ktlint /usr/local/bin/
          
          git clone https://github.com/flutter/flutter.git -b stable --depth 1
          echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
      
      - name: Make scripts executable
        if: steps.changed-files.outputs.any_changed == 'true'
        run: chmod +x scripts/*.sh
      
      - name: Detect languages and run checks
        if: steps.changed-files.outputs.any_changed == 'true'
        id: run-checks
        continue-on-error: true
        run: |
          echo "üïµÔ∏è Running sanity checks on changed files..."
          echo "${{ steps.changed-files.outputs.all_changed_files }}" > changed_files.txt
          bash scripts/detect-language.sh

          # Disable exit-on-error to capture script exit code
          set +e
          bash scripts/run-checks.sh > check_results.txt 2>&1
          CHECK_EXIT_CODE=$?
          set -e

          # Mark workflow result
          if [ $CHECK_EXIT_CODE -eq 0 ]; then
            echo "‚úÖ All sanity checks PASSED!"
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Sanity checks FAILED! (Exit code: $CHECK_EXIT_CODE)"
            echo "status=failure" >> $GITHUB_OUTPUT
          fi

          echo "--- RESULTS ---"
          cat check_results.txt
          echo "---------------"
      
      - name: Post results as PR comment
        if: steps.changed-files.outputs.any_changed == 'true' && always()
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            let results = 'No results file found';
            
            try {
              results = fs.readFileSync('check_results.txt', 'utf8');
            } catch (error) {
              results = 'Error reading results: ' + error.message;
            }
            
            const status = '${{ steps.run-checks.outputs.status }}';
            const statusEmoji = status === 'success' ? '‚úÖ' : '‚ùå';
            const statusText = status === 'success' ? 'PASSED' : 'FAILED';
            
            const body = `## ${statusEmoji} Sanity Check ${statusText}
            
            <details>
            <summary>Click to view detailed results</summary>
            
            \`\`\`
            ${results}
            \`\`\`
            
            </details>
            
            ---
            *Automated sanity checks completed at ${new Date().toISOString()}*`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
      
      - name: Add Sanity Check label
        if: steps.changed-files.outputs.any_changed == 'true' && always()
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const status = '${{ steps.run-checks.outputs.status }}';
            const label = status === 'success' ? 'sanity-check-passed' : 'sanity-check-failed';
            const opposite = status === 'success' ? 'sanity-check-failed' : 'sanity-check-passed';

            try {
              await github.rest.issues.removeLabel({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: opposite
              });
            } catch (error) {
              // Label might not exist; ignore.
            }

            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [label]
            });
      
      - name: Write summary
        if: always()
        run: |
          if [ "${{ steps.run-checks.outputs.status }}" = "success" ]; then
            echo "### ‚úÖ Sanity Check Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ‚ùå Sanity Check Failed" >> $GITHUB_STEP_SUMMARY
          fi
      
      - name: Fail workflow if checks failed
        if: steps.run-checks.outputs.status == 'failure'
        run: |
          echo "::error::Sanity checks failed. Please fix the issues before merging."
          exit 1
